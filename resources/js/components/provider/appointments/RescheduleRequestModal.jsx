import React, { useState } from \"react\";\nimport providerAppointmentService from \"../../../services/providerAppointmentService\";\n\nconst RescheduleRequestModal = ({\n    show,\n    onHide,\n    appointment,\n    onResponseSuccess,\n}) => {\n    const [loading, setLoading] = useState(false);\n    const [showDeclineReason, setShowDeclineReason] = useState(false);\n    const [declineReason, setDeclineReason] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    if (!show || !appointment?.reschedule_request) return null;\n\n    const rescheduleRequest = appointment.reschedule_request;\n\n    // Helper functions\n    const formatDate = (dateString) => {\n        if (!dateString) return \"\";\n        try {\n            return new Date(dateString).toLocaleDateString(\"en-US\", {\n                weekday: \"long\",\n                year: \"numeric\",\n                month: \"long\",\n                day: \"numeric\",\n            });\n        } catch (error) {\n            return dateString;\n        }\n    };\n\n    const formatTime = (timeString) => {\n        if (!timeString) return \"\";\n        try {\n            const [hours, minutes] = timeString.split(\":\");\n            const hour = parseInt(hours);\n            const ampm = hour >= 12 ? \"PM\" : \"AM\";\n            const displayHour = hour % 12 || 12;\n            return `${displayHour}:${minutes} ${ampm}`;\n        } catch (error) {\n            return timeString;\n        }\n    };\n\n    const getRescheduleReasonText = (reason) => {\n        const reasons = {\n            personal_emergency: \"Personal emergency\",\n            work_conflict: \"Work schedule conflict\",\n            travel_plans: \"Travel plans changed\",\n            health_reasons: \"Health reasons\",\n            weather_concerns: \"Weather concerns\",\n            other: \"Other reason\",\n        };\n        return reasons[reason] || reason;\n    };\n\n    // Handle accept reschedule\n    const handleAccept = async () => {\n        if (loading) return;\n        \n        setLoading(true);\n        setErrors({});\n        \n        try {\n            const result = await providerAppointmentService.acceptRescheduleRequest(\n                appointment.id\n            );\n            \n            if (result.success) {\n                onResponseSuccess(result.data);\n                onHide();\n                alert(\"Reschedule request accepted! The appointment has been updated.\");\n            } else {\n                setErrors({ general: result.message || \"Failed to accept reschedule request\" });\n            }\n        } catch (error) {\n            console.error(\"Accept reschedule failed:\", error);\n            setErrors({ general: \"Failed to accept reschedule request. Please try again.\" });\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Handle decline reschedule\n    const handleDecline = async () => {\n        if (loading) return;\n        \n        if (!showDeclineReason) {\n            setShowDeclineReason(true);\n            return;\n        }\n        \n        if (!declineReason.trim()) {\n            setErrors({ decline_reason: \"Please provide a reason for declining\" });\n            return;\n        }\n        \n        setLoading(true);\n        setErrors({});\n        \n        try {\n            const result = await providerAppointmentService.declineRescheduleRequest(\n                appointment.id,\n                declineReason\n            );\n            \n            if (result.success) {\n                onResponseSuccess(result.data);\n                onHide();\n                alert(\"Reschedule request declined. The original appointment time remains unchanged.\");\n            } else {\n                setErrors({ general: result.message || \"Failed to decline reschedule request\" });\n            }\n        } catch (error) {\n            console.error(\"Decline reschedule failed:\", error);\n            setErrors({ general: \"Failed to decline reschedule request. Please try again.\" });\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleClose = () => {\n        if (!loading) {\n            setShowDeclineReason(false);\n            setDeclineReason(\"\");\n            setErrors({});\n            onHide();\n        }\n    };\n\n    return (\n        <>\n            {/* Modal Backdrop */}\n            <div className=\"modal-backdrop fade show\" style={{ zIndex: 1040 }}></div>\n\n            {/* Modal */}\n            <div className=\"modal fade show d-block\" style={{ zIndex: 1050 }} tabIndex=\"-1\">\n                <div className=\"modal-dialog modal-lg modal-dialog-centered\">\n                    <div className=\"modal-content\">\n                        {/* Header */}\n                        <div className=\"modal-header border-bottom\">\n                            <div>\n                                <h5 className=\"modal-title fw-bold text-orange\">\n                                    <i className=\"fas fa-calendar-alt me-2\"></i>\n                                    Reschedule Request\n                                </h5>\n                                <p className=\"text-muted mb-0 small\">\n                                    Client has requested to reschedule this appointment\n                                </p>\n                            </div>\n                            <button\n                                type=\"button\"\n                                className=\"btn-close\"\n                                onClick={handleClose}\n                                disabled={loading}\n                            ></button>\n                        </div>\n\n                        {/* Body */}\n                        <div className=\"modal-body\">\n                            {errors.general && (\n                                <div className=\"alert alert-danger\">\n                                    <i className=\"fas fa-exclamation-triangle me-2\"></i>\n                                    {errors.general}\n                                </div>\n                            )}\n\n                            {/* Current Appointment Info */}\n                            <div className=\"current-appointment mb-4\">\n                                <h6 className=\"fw-bold mb-3\">\n                                    <i className=\"fas fa-info-circle me-2 text-info\"></i>\n                                    Current Appointment\n                                </h6>\n                                <div className=\"card bg-light\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-6\">\n                                                <strong>Service:</strong> {appointment.service?.title || \"N/A\"}\n                                            </div>\n                                            <div className=\"col-md-6\">\n                                                <strong>Client:</strong> {appointment.client?.name || appointment.client_name || \"N/A\"}\n                                            </div>\n                                            <div className=\"col-md-6 mt-2\">\n                                                <strong>Current Date:</strong> {formatDate(appointment.appointment_date)}\n                                            </div>\n                                            <div className=\"col-md-6 mt-2\">\n                                                <strong>Current Time:</strong> {formatTime(appointment.appointment_time)}\n                                            </div>\n                                            <div className=\"col-md-6 mt-2\">\n                                                <strong>Duration:</strong> {appointment.duration_hours} hour(s)\n                                            </div>\n                                            <div className=\"col-md-6 mt-2\">\n                                                <strong>Price:</strong> Rs. {appointment.total_price}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Reschedule Request Details */}\n                            <div className=\"reschedule-request mb-4\">\n                                <h6 className=\"fw-bold mb-3\">\n                                    <i className=\"fas fa-calendar-check me-2 text-warning\"></i>\n                                    Requested Changes\n                                </h6>\n                                <div className=\"card border-warning\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-6\">\n                                                <strong>New Date:</strong> {formatDate(rescheduleRequest.requested_date)}\n                                            </div>\n                                            <div className=\"col-md-6\">\n                                                <strong>New Time:</strong> {formatTime(rescheduleRequest.requested_time)}\n                                            </div>\n                                            <div className=\"col-md-6 mt-2\">\n                                                <strong>Reason:</strong> {getRescheduleReasonText(rescheduleRequest.reason)}\n                                            </div>\n                                            <div className=\"col-md-6 mt-2\">\n                                                <strong>Requested:</strong> {new Date(rescheduleRequest.created_at).toLocaleDateString()}\n                                            </div>\n                                        </div>\n                                        \n                                        {rescheduleRequest.notes && (\n                                            <div className=\"mt-3\">\n                                                <strong>Additional Notes:</strong>\n                                                <p className=\"mt-1 mb-0 p-2 bg-white rounded border-start border-warning border-3\">\n                                                    {rescheduleRequest.notes}\n                                                </p>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Decline Reason Input */}\n                            {showDeclineReason && (\n                                <div className=\"decline-reason mb-4\">\n                                    <h6 className=\"fw-bold mb-3 text-danger\">\n                                        <i className=\"fas fa-times-circle me-2\"></i>\n                                        Reason for Declining\n                                    </h6>\n                                    <div className=\"card border-danger\">\n                                        <div className=\"card-body\">\n                                            <textarea\n                                                className={`form-control ${errors.decline_reason ? \"is-invalid\" : \"\"}`}\n                                                rows=\"3\"\n                                                placeholder=\"Please explain why you cannot accommodate this reschedule request...\"\n                                                value={declineReason}\n                                                onChange={(e) => {\n                                                    setDeclineReason(e.target.value);\n                                                    if (errors.decline_reason) {\n                                                        setErrors(prev => ({ ...prev, decline_reason: null }));\n                                                    }\n                                                }}\n                                                maxLength=\"500\"\n                                                disabled={loading}\n                                            ></textarea>\n                                            {errors.decline_reason && (\n                                                <div className=\"invalid-feedback\">\n                                                    {errors.decline_reason}\n                                                </div>\n                                            )}\n                                            <small className=\"text-muted d-block mt-1\">\n                                                {declineReason.length}/500 characters\n                                            </small>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n\n                            {/* Action Info */}\n                            <div className=\"action-info\">\n                                <div className=\"alert alert-info\">\n                                    <h6 className=\"fw-bold mb-2\">\n                                        <i className=\"fas fa-lightbulb me-2\"></i>\n                                        What happens next?\n                                    </h6>\n                                    <ul className=\"mb-0 ps-3\">\n                                        <li><strong>Accept:</strong> The appointment will be updated to the new date/time, and the client will be notified</li>\n                                        <li><strong>Decline:</strong> The original appointment remains unchanged, and the client will be notified with your reason</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Footer */}\n                        <div className=\"modal-footer border-top\">\n                            <div className=\"d-flex justify-content-between w-100\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-secondary\"\n                                    onClick={handleClose}\n                                    disabled={loading}\n                                >\n                                    Cancel\n                                </button>\n                                \n                                <div className=\"d-flex gap-2\">\n                                    {!showDeclineReason ? (\n                                        <>\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-outline-danger\"\n                                                onClick={handleDecline}\n                                                disabled={loading}\n                                            >\n                                                <i className=\"fas fa-times me-2\"></i>\n                                                Decline\n                                            </button>\n                                            \n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-success\"\n                                                onClick={handleAccept}\n                                                disabled={loading}\n                                            >\n                                                {loading ? (\n                                                    <>\n                                                        <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                                                        Processing...\n                                                    </>\n                                                ) : (\n                                                    <>\n                                                        <i className=\"fas fa-check me-2\"></i>\n                                                        Accept Reschedule\n                                                    </>\n                                                )}\n                                            </button>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-outline-secondary\"\n                                                onClick={() => setShowDeclineReason(false)}\n                                                disabled={loading}\n                                            >\n                                                Back\n                                            </button>\n                                            \n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-danger\"\n                                                onClick={handleDecline}\n                                                disabled={loading || !declineReason.trim()}\n                                            >\n                                                {loading ? (\n                                                    <>\n                                                        <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                                                        Declining...\n                                                    </>\n                                                ) : (\n                                                    <>\n                                                        <i className=\"fas fa-times me-2\"></i>\n                                                        Confirm Decline\n                                                    </>\n                                                )}\n                                            </button>\n                                        </>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Custom Styles */}\n            <style>{`\n                .text-orange { color: #fd7e14 !important; }\n                .btn-orange {\n                    background-color: #fd7e14;\n                    border-color: #fd7e14;\n                    color: white;\n                }\n                .btn-orange:hover {\n                    background-color: #e8681c;\n                    border-color: #e8681c;\n                    color: white;\n                }\n                .border-warning {\n                    border-color: #ffc107 !important;\n                }\n                .border-3 {\n                    border-width: 3px !important;\n                }\n            `}</style>\n        </>\n    );\n};\n\nexport default RescheduleRequestModal;